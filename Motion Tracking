from cv2 import cv2
import numpy as np

videoPath = "C:/Users/Admin/Downloads/sample3.mp4"

# Create a video capture object to read videos
cap = cv2.VideoCapture(videoPath)

object_detector = cv2.createBackgroundSubtractorMOG2(history = 1000, varThreshold=50)

# Read first frame

# quit if unable to read the video file

while True:
    
    success, frame = cap.read()
    height, width, _  = frame.shape
    roi = frame[height-600:height-200,200:width-250]
    
    mask = object_detector.apply(roi)
    _,mask = cv2.threshold(mask,200,255,cv2.THRESH_BINARY)
    
    
    edges = cv2.Canny(roi,75,100)
    lines = cv2.HoughLinesP(edges, 1, np.pi/180,100, maxLineGap=80)
    
    for line in lines:
        x1,y1, x2,y2 = line[0]
        cv2.line(roi, (x1,y1), (x2,y2), (255,0,0), 2)
        _,line_mask = cv2.threshold(edges,200,255,cv2.THRESH_BINARY_INV)
    
    contours,_ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    for cnt in contours:
        area = cv2.contourArea(cnt)
        if area > 200:
            cv2.drawContours(roi, cnt, -1, (0,255,0), 1)
            x,y,w,h = cv2.boundingRect(cnt)
            cv2.rectangle(roi, (x, y), (x + w, y + h), (0, 255, 0), 2)
           

    cv2.imshow('Edges', edges)      
    cv2.imshow('ROI_FRAME',frame)
    cv2.imshow('Mask', line_mask)
    
    
    if cv2.waitKey(1) & 0xFF==ord('q'):
        break
    
cap.release()
cv2.destroyAllWindows()
